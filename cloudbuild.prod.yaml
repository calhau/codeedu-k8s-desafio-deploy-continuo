steps:

  - id: "Rodando docker-compose"
    name: 'gcr.io/$PROJECT_ID/docker-compose'
    args: ['-f', 'docker-compose.cloudbuild.yaml', 'up', '-d']  
  
  - id: "Rodando docker ps - Verificar 2 containers test/prod"
    name: 'gcr.io/cloud-builders/docker'
    args: ['ps']  
  
  - id: "Rodando o ls no containerTest Go para ver se temos o arquivo test"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'k8s-desafio-hpa-go-container_test', 'ls']    
  
  - id: "Rodando o test da app GO"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec', '-t', 'k8s-desafio-hpa-go-container_test', 'go', 'test']  
  
    ## Utilizar o DockerFIle da RAIZ - img Optimezed
  - id: "Gerar build da imagem"
    name: 'gcr.io/cloud-builders/docker'
    args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/k8s-desafio-deploy-continuo:$SHORT_SHA'
    - '-f'
    - 'DockerFile'
    - '.'
  images:
  - 'gcr.io/$PROJECT_ID/k8s-desafio-hpa-go:$SHORT_SHA'
  
  - id: "Pushing image"
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/k8s-desafio-deploy-continuo:$SHORT_SHA']
  
  - id: "Adjusting deployment file - k8s"
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: '/bin/sh'
  args:
    - '-c'
    - |
      sed 's#img-app-go#gcr.io/$PROJECT_ID/k8s-desafio-deploy-continuo:$SHORT_SHA#g' k8s/deployment.yaml > k8s/app/deployment-new.yaml
      cat k8s/deployment-new.yaml
  
  - id: "Deployment k8s"
  name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'k8s/deployment-new.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=southamerica-east1-b'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'